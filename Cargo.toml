
[workspace]
resolver = "2"

members = [
    "crates/*",
    "games/*"
]

[workspace.package]
version = "0.1.0"
edition = "2024"

[workspace.dependencies]
# Local Crates
sly_common = { path = "crates/common" }
sly_camera = { path = "crates/cameras" }
sly_editor = { path = "crates/editor" }

leptos-bevy-canvas = { path = "crates/leptos-bevy-canvas" }

# transform_gizmo = { path = "crates/transform_gizmo" }
# billboard  = { path = "crates/billboard" }
# go = { path = "crates/go" }


# Games
breakout = { path = "games/breakout" }
tic_tac_toe = { path = "games/tic_tac_toe" }
unidir_events = { path = "games/unidir_events" }
sync_app = { path = "games/sync_app" }

# Crates
bevy = "0.15" 
avian3d = "0.2.1"
approx = "0.5"
bevy-inspector-egui = { version = "0.29.1", features = [
    "bevy_pbr",
    "highlight_changes",
] }
bevy_mod_outline = { git = "https://github.com/komadori/bevy_mod_outline.git" }
bevy_hanabi = "0.14.0"
bevy_panorbit_camera = "0.22.1"
leafwing-input-manager = "0.16.0"
rand = "0.8"

bevy_rand = { version = "0.9", features = ["wyrand"] }
leptos-use = "0.15"
rand_core = "0.6"
web-sys = "0.3"
wasm-bindgen-test = "0.3.0"
console_error_panic_hook = "0.1.0"

serde = { version = "1.0", features = ["derive"] }
paste = "1.0.15"
clap = { version = "4.5", features = ["derive"] }

leptos = { version = "0.7" }
leptos_meta = { version = "0.7" }
leptos_axum = { version = "0.7" }
leptos_router = { version = "0.7" }
wasm-bindgen = "0.2.100"

strum = { version = "0.26", features = ["derive"] }
strum_macros = "0.26"
 
# Packages
[package]
name = "blackbird"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["ssr"]
hydrate = ["leptos/hydrate"]
ssr = [
  "dep:axum",
  "dep:tower",
  "dep:tower-http",
  "dep:tokio",
  "dep:axum_session_sqlx",
  "dep:axum_session_auth",
  "dep:axum_session",
  "dep:async-trait",
  "dep:sqlx",
  "dep:bcrypt",
  "dep:rand",
  "leptos/ssr",
  "leptos/nightly",
  "leptos_meta/ssr",
  "leptos_router/ssr",
  "dep:leptos_axum",
  "leptos-use/ssr",
  "leptos-use/axum",
]

[dependencies]
# Local Crates
leptos-bevy-canvas.workspace = true

# Local Games
breakout.workspace = true
tic_tac_toe.workspace = true
unidir_events.workspace = true
sync_app.workspace = true

# bevy
bevy.workspace = true
bevy_rand = { version = "0.9", features = ["wyrand"] }

# wasm and leptos 
wasm-bindgen = { workspace = true }
web-sys = "0.3"
anyhow = "1.0"
console_log = "1.0"

console_error_panic_hook.workspace = true
futures = "0.3.0"
leptos = { workspace = true, features = ["nightly"] }
leptos_meta.workspace = true
leptos_axum = { workspace = true, optional = true }
leptos_router = { workspace = true, features = ["nightly"] }
leptos-use = { version = "0.15", features = [] }
codee = "0.3"

# icons
icondata_core = "0.1"
icondata = "0.5"

# Server
log = "0.4.0"
simple_logger = "5.0"
serde = { version = "1.0", features = ["derive"] }
axum = { version = "0.7", optional = true, features = ["macros"] }
tower = { version = "0.4", optional = true }
tower-http = { version = "0.5", features = ["fs"], optional = true }
tokio = { version = "1", features = ["full"], optional = true }
http = { version = "1" }
sqlx = { version = "0.8.0", features = [
  "runtime-tokio-rustls",
  "sqlite",
], optional = true }
thiserror = "1.0"
async-trait = { version = "0.1.0", optional = true }
axum_session_auth = { version = "0.14.0", features = [], optional = true }
axum_session = { version = "0.14.0", features = [], optional = true }
axum_session_sqlx = { version = "0.3.0", features = [ "sqlite", "tls-rustls"], optional = true }
bcrypt = { version = "0.15.0", optional = true }

# Util
strum.workspace = true
rand = { version = "0.8", features = ["min_const_gen"], optional = true }
rand_core = "0.6"


[profile.release]
panic = "abort"

####### 
# Pofiles
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

#######
# Lepots
[package.metadata.cargo-all-features]
denylist = ["axum", "tower", "tower-http", "tokio", "sqlx", "leptos_axum"]
skip_feature_sets = [["ssr", "hydrate"]]

[package.metadata.leptos]
lib-profile-release = "wasm-release"

# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "blackbird"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss-pkg>/ then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<siteapp.css
#style-file = "./style.css"
tailwind-input-file = "style/tailwind.css"

# [Optional] Files in the asset-dir will be copied to the site-root directory
assets-dir = "public"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
end2end-cmd = "npx playwright test"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = true
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

[dev-dependencies]
bevy.workspace = true
icondata = "0.5"
wasm-bindgen-test = "0.3.5"

#############
# Patches

[patch.crates-io]
leptos-use = { git = "https://github.com/Synphonyte/leptos-use.git"}

#TODO: bevy main already has fix for spawn_app, remove this once 0.16 releases
bevy = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_a11y = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_animation = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_app = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_asset = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_audio = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_color = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_core = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_core_pipeline = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_derive = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_dev_tools = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_diagnostic = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
#bevy_dylib = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_ecs = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_encase_derive = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_gilrs = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_gizmos = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_gltf = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_hierarchy = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_image = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_input = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_internal = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_log = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_macro_utils = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_math = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_mesh = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_mikktspace = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_pbr = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_picking = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_ptr = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_reflect = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
#bevy_remote = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_render = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_scene = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_sprite = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_state = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_tasks = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_text = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_time = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_transform = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_ui = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_utils = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_window = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_winit = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }