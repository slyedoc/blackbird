
[workspace]
resolver = "2"
members = [
    "crates/*",
    "games/*"
]

[workspace.package]
version = "0.1.0"
edition = "2024"

[package]
name = "blackbird"
version = "0.1.0"
edition = "2024"
description = "Game site with bevy and leptos"
repository = "http://github.com/slyedoc/blackbird"
license = "TODO"

[lib]
crate-type = ["cdylib", "rlib"]

[profile.dev.package."*"]
opt-level = 3

#[profile.release]
#panic = "abort"

[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"


[profile.wasm-release]
inherits = "release"
# Optimize with size in mind (also try "z", sometimes it is better).
# Slightly slows compile times, great improvements to file size and runtime performance.
opt-level = 's' 
# Strip all debugging information from the binary to slightly reduce file size.
strip = "debuginfo"
#panic = "abort"

[features]
default = ["all_games", "sly_common/editor"] #"breakout" "bevy/dynamic_linking"

# making games optional features for faster hot reload, 
all_games = ["breakout", "tic_tac_toe", "cast_app", "mine"] #  "sync_app", "unidir_events",
tic_tac_toe = ["dep:tic_tac_toe"] 
breakout = ["dep:breakout"]
unidir_events = ["dep:unidir_events"]
sync_app = ["dep:sync_app"]
cast_app = ["dep:cast_app"]
mine = ["dep:mine"]

hydrate = [
  "leptos/hydrate"
]
ssr = [
  "dep:axum",
  "dep:tower",
  "dep:tower-http",
  "dep:tokio",
  "dep:axum_session_sqlx",
  "dep:axum_session_auth",
  "dep:axum_session",
  "dep:async-trait",
  "dep:sqlx",
  "dep:bcrypt",
  #"dep:rand",
  "dotenvy",
  "leptos/ssr",
  "leptos_meta/ssr",
  "leptos_router/ssr",
  "dep:leptos_axum",
  "leptos-use/ssr",
  "leptos-use/axum",
]

[workspace.dependencies]


# Local Crates
sly_common = { path = "crates/common" }
sly_camera = { path = "crates/camera" }
sly_editor = { path = "crates/editor" }

leptos-bevy-canvas = { path = "crates/leptos-bevy-canvas" }
# transform_gizmo = { path = "crates/transform_gizmo" }
billboard  = { path = "crates/billboard" }
# go = { path = "crates/go" }

# Games
breakout = { path = "games/breakout" }
tic_tac_toe = { path = "games/tic_tac_toe" }
unidir_events = { path = "games/unidir_events" }
sync_app = { path = "games/sync_app" }
cast_app = { path = "games/cast_app" }
mine = { path = "games/mine" }

# Crates
bevy =  { version = "0.15" }
avian3d = "0.2.1"
approx = "0.5"
bevy-inspector-egui = { version = "0.29.1", features = [
    "bevy_pbr",
    "highlight_changes",
] }
bevy_mod_outline = { git = "https://github.com/komadori/bevy_mod_outline.git" }
bevy_hanabi = { version = "0.14", default-features = false }
bevy_panorbit_camera = "0.22.1"
leafwing-input-manager = "0.16.0"

serde = { version = "1.0", features = ["derive"] }
paste = "1.0.15"
clap = { version = "4.5", features = ["derive"] }

leptos = { version = "0.7", features = ["nightly"]}
leptos-use = "0.15"
leptos_meta = { version = "0.7" }
leptos_axum = { version = "0.7" }
leptos_router = { version = "0.7" }
wasm-bindgen = "0.2.100"
web-sys = "0.3"
wasm-bindgen-test = "0.3.0"
console_error_panic_hook = "0.1.0"
chrono = "0.4"
strum = { version = "0.26", features = ["derive"] }
strum_macros = "0.26"
rand_core = "0.9"
bevy_rand = "0.9"
bevy_prng = "0.9"
rand = "0.8"

[dependencies]
sly_common = { workspace = true, features = ["editor"] }

# Local Crates
leptos-bevy-canvas.workspace = true

# Local Games
breakout = { workspace = true, optional = true, features = ["web"] }
tic_tac_toe = { workspace = true, optional = true, features = ["web"] }
unidir_events = { workspace = true, optional = true, features = ["web"] }
sync_app = { workspace = true, optional = true, features = ["web"] }
cast_app = { workspace = true, optional = true, features = ["web"] }
mine = { workspace = true, optional = true, features = ["web"] }

# bevy
bevy = { workspace = true }
# wasm and leptos 
wasm-bindgen = { workspace = true }
leptos = { workspace = true }
leptos_meta.workspace = true
leptos_axum = { workspace = true, optional = true }
leptos_router = { workspace = true, features = ["nightly"] }
leptos-use = { version = "0.15", features = [] }

# icons
icondata_core = "0.1"
icondata = "0.5"

# Server
axum = { version = "0.7", optional = true, features = ["macros"] }
tower = { version = "0.4", optional = true }
tower-http = { version = "0.5", features = ["fs", "trace"], optional = true }
tokio = { version = "1", features = ["full"], optional = true }
http = { version = "1" }
# TODO: do we need this openssl 
sqlx = { version = "0.8.0", features = ["runtime-tokio-rustls", "postgres", "chrono", "json", "macros"], optional = true }
axum_session_auth = { version = "0.14.0", features = [], optional = true }
axum_session = { version = "0.14.0", features = [], optional = true }
axum_session_sqlx = { version = "0.3.0", features = [ "postgres", "tls-rustls"], optional = true }
bcrypt = { version = "0.15.0", optional = true }
tracing = "0.1"

# Util
chrono = { version = "0.4", features = ["serde"]}
futures = "0.3.0"
gloo-timers = { version = "0.3.0", features = ["futures"] }

console_log = "1.0"
console_error_panic_hook.workspace = true
log = "0.4.0"
simple_logger = "5.0"

dotenvy = { version = "0.15", optional = true }
async-trait = { version = "0.1.0", optional = true }
strum.workspace = true
cfg-if = "1.0.0"
thiserror = "1.0"
anyhow = "1.0"

serde = { version = "1.0", features = ["derive"] } # TODO" feature gate this for size later

[package.metadata.leptos]
lib-profile-release = "wasm-release"

# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "blackbird"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss-pkg>/ then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<siteapp.css
style-file = "style/empty.css"
tailwind-input-file = "style/tailwind.css"

# [Optional] Files in the asset-dir will be copied to the site-root directory
assets-dir = "public"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
end2end-cmd = "npx playwright test"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = true
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = true

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = true

[dev-dependencies]
bevy.workspace = true
# icondata = "0.5"
# wasm-bindgen-test = "0.3.5"

# Patches
[patch.crates-io]
#leptos-use = { git = "https://github.com/Synphonyte/leptos-use.git"}

#TODO: bevy main already has fix for spawn_app, remove this once 0.16 releases
bevy = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_a11y = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_animation = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_app = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_asset = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_audio = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_color = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_core = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_core_pipeline = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_derive = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_dev_tools = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_diagnostic = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
#bevy_dylib = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_ecs = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_encase_derive = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_gilrs = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_gizmos = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_gltf = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_hierarchy = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_image = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_input = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_internal = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_log = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_macro_utils = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_math = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_mesh = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_mikktspace = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_pbr = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_picking = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_ptr = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_reflect = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
#bevy_remote = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_render = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_scene = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_sprite = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_state = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_tasks = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_text = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_time = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_transform = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_ui = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_utils = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_window = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
bevy_winit = { git = "https://github.com/slyedoc/bevy.git", branch = "wasm-allow-loop-recreation" }
